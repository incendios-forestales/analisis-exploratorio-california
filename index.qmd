---
title: "Análisis exploratorio de incendios forestales ocurridos en California durante 1980 y 2024"
author: "Mariela Alvarado, Manuel Vargas"
date: "2025-08-25"
format: html
toc: true
lang: es
theme: cosmo
---

# Introducción

Los incendios forestales representan una de las amenazas medioambientales más críticas del siglo XXI. Además de destruir ecosistemas y biodiversidad, estos eventos comprometen la salud pública, la seguridad de las comunidades y la estabilidad económica, lo que evidencia la urgente necesidad de herramientas analíticas que permitan comprender y mitigar su impacto. Mediante técnicas de procesamiento y análisis espacial de datos geográficos, el presente estudio se enfoca en la incidencia de incendios forestales como una manifestación del cambio climático. A través del lenguaje de programación R, se desarrolló un sistema de visualización e interpretación geoespacial que integra datos vectoriales y ráster. El análisis se centró en el estado de California, Estados Unidos, una región particularmente vulnerable a eventos extremos asociados al calentamiento global.

Este documento presenta un análisis exploratorio de los datos de incendios forestales facilitados por el [Departamento de Silvicultura y Protección contra Incendios de California (CAL FIRE)](https://www.fire.ca.gov/), a los cuales se les unieron datos de temperatura provenientes del [Reanálisis atmosférico de quinta generación del ECMWF (ERA5)](https://cds.climate.copernicus.eu/).

```{r}
#| label: cargar-bibliotecas
#| warning: false
#| message: false
#| code-fold: true
#| echo: false

library(tidyverse)
library(DT)
library(plotly)
library(scales)
library(terra)
library(tmap)
library(leaflet)
library(RColorBrewer)
```

```{r}
#| label: cargar-datos-incendios
#| warning: false
#| message: false
#| code-fold: true
#| echo: false

# Leer archivo
incendios <- read_csv("incendios-ca-historicos-1980-2024.csv")

# Eliminar incendios que no tienen ALARM_DATE
incendios <-
  incendios |>
  drop_na(ALARM_DATE)

# Incendios agrupados por año
incendios_por_anio <-
  incendios |>
  mutate(
    anio = year(ALARM_DATE)
  ) |>
  group_by(anio) |>
  summarise(
    n                                         = n(),
    area_quemada_total                        = sum(GIS_ACRES, na.rm = TRUE),
    temperatura_2m_promedio_hora_fecha_alarma = mean(
      TEMPERATURE_2M_ALARM_DATE, 
      na.rm                                   = TRUE
    ),
    .groups                                   = "drop"
  )

# Incendios agrupados por año y mes
incendios_por_anio_mes <-
  incendios |>
  mutate(
    anio = year(ALARM_DATE),
    mes  = month(ALARM_DATE, label = TRUE, abbr = TRUE)
  ) |>
  group_by(anio, mes) |>
  summarise(
    n                                         = n(),
    area_quemada_total                        = sum(GIS_ACRES, na.rm = TRUE),
    temperatura_2m_promedio_hora_fecha_alarma = mean(
      TEMPERATURE_2M_ALARM_DATE, 
      na.rm = TRUE
    ),
    .groups                                   = "drop"
  )

# Asegurar que los meses queden en orden enero-diciembre
incendios_por_anio_mes$mes <- factor(
  incendios_por_anio_mes$mes,
  levels = month(ymd("2025-01-01") + months(0:11), label = TRUE, abbr = TRUE)
)

# Traducir las abreviaturas de los meses a español
incendios_por_anio_mes <-
  incendios_por_anio_mes |>
    mutate(
      mes = factor(
        mes,
        levels = month.abb,
        labels = c("Ene", "Feb", "Mar", "Abr", "May", "Jun",
                   "Jul", "Ago", "Sep", "Oct", "Nov", "Dic")
      )
    )
```

```{r}
#| label: cargar-datos-variables-climaticas
#| warning: false
#| message: false
#| code-fold: true
#| echo: false

# Temperatura del aire a 2m
temperature_2m <- rast("2m_temperature_ca_promedio_1980-2024.tif")
# Temperatura de la superficie de la Tierra
skin_temperature <- rast("skin_temperature_ca_promedio_1980-2024.tif")
# Temperatura del suelo nivel 1
soil_temperature_level_1 <- rast("soil_temperature_level_1_ca_promedio_1980-2024.tif")
# Precipitación total mensual
total_precipitation <- rast("total_precipitation_ca_promedio_1980-2024.tif")
# Componente u (este-oeste) del viento a 10 m
u_component_of_wind_10m <- rast("10m_u_component_of_wind_ca_promedio_1980-2024.tif")
# Componente v (norte-sur) del viento a 10 m
v_component_of_wind_10m <- rast("10m_v_component_of_wind_ca_promedio_1980-2024.tif")
# Velocidad del viento a 10 m
wind_speed_10m <- rast("wind_speed_kmh_10m_promedio_1980-2024.tif")
# Dirección del viento (desde)
wind_dir_from_10m <- rast("wind_dir_from_10m_promedio_1980-2024.tif")
# Dirección del viento (hacia)
wind_dir_to_10m <- rast("wind_dir_to_10m_promedio_1980-2024.tif")
# Índice de área foliar (LAI) – vegetación alta
lai_high_vegetation <- rast("leaf_area_index_high_vegetation_ca_promedio_1980-2024.tif")
# Índice de área foliar (LAI) – vegetación baja
lai_low_vegetation <- rast("leaf_area_index_low_vegetation_ca_promedio_1980-2024.tif")

# Renombrar las capas de las variables climáticas
nombres_capas_variables_climaticas <- c(
  "1980–1984", "1985–1989", "1990–1994",
  "1995–1999", "2000–2004", "2005–2009",
  "2010–2014", "2015–2019", "2020–2024"
)
names(temperature_2m)           <- nombres_capas_variables_climaticas
names(skin_temperature)         <- nombres_capas_variables_climaticas
names(soil_temperature_level_1) <- nombres_capas_variables_climaticas
names(total_precipitation)      <- nombres_capas_variables_climaticas
names(u_component_of_wind_10m)  <- nombres_capas_variables_climaticas
names(v_component_of_wind_10m)  <- nombres_capas_variables_climaticas
names(lai_high_vegetation)      <- nombres_capas_variables_climaticas
names(lai_low_vegetation)       <- nombres_capas_variables_climaticas

# Paletas de colores de las variables climáticas
paleta_temperature              <- "-RdYlBu"
paleta_temperature_2m           <- paleta_temperature
paleta_skin_temperature         <- paleta_temperature
paleta_soil_temperature_level_1 <- paleta_temperature
paleta_total_precipitation      <- "PuBuGn"
paleta_u_component_of_wind_10m  <- "PuOr"
paleta_v_component_of_wind_10m  <- "PuOr"
paleta_wind_speed_10m           <- "YlOrRd"
paleta_wind_dir_from_10m        <- "matplotlib.twilight"
paleta_wind_dir_to_10m          <- "matplotlib.twilight_shifted"
paleta_lai_high_vegetation      <- "YlGn"
paleta_lai_low_vegetation       <- "YlGn"

# Rango global de las variables de temperatura
global_min_temperature <- min(
  minmax(temperature_2m)[1, ],
  minmax(skin_temperature)[1, ],
  minmax(soil_temperature_level_1)[1, ]
)
global_max_temperature <- max(
  minmax(temperature_2m)[2, ],
  minmax(skin_temperature)[2, ],
  minmax(soil_temperature_level_1)[2, ]
)

# Escala global de temperatura
escala_temperature <- tm_scale_continuous(
  limits       = c(global_min_temperature, global_max_temperature),
  values       = paleta_temperature,
  midpoint     = 0,
  values.range = c(0, 1)
)

# Rango global de total_precipitation
global_min_total_precipitation <- min(
  minmax(total_precipitation)[1, ]
)
global_max_total_precipitation <- max(
  minmax(total_precipitation)[2, ]
)

# Escala global de total_precipitation
escala_total_precipitation <- tm_scale_continuous(
  limits       = c(global_min_total_precipitation, global_max_total_precipitation),
  values       = paleta_total_precipitation,
  midpoint     = 0,
  values.range = c(0, 1)
)
```

# Registros de incendios

```{r}
#| label: tabla-incendios
#| code-fold: true

# Definir la tabla DT
t <-
  incendios |>
  select(FIRE_NAME, ALARM_DATE, GIS_ACRES, TEMPERATURE_2M_ALARM_DATE) |>
  arrange(ALARM_DATE) |>
  datatable(
    rownames = FALSE,
    colnames = c("Nombre del incendio", "Fecha de alarma", "Área quemada (acres)", "Temperatura (°C)"),
    options = list(
      pageLength = 10,
      language = list(url = '//cdn.datatables.net/plug-ins/1.10.11/i18n/Spanish.json')
    )
  )

# Mostrar la tabla
t
```


# Análisis por año

## Cantidad de incendios

```{r}
#| label: grafico-cantidad-incendios-por-anio
#| warning: false
#| message: false
#| code-fold: true

# Gráfico ggplot2 de líneas + tendencia
g <-
  ggplot(
    incendios_por_anio, 
    aes(
      x = anio, 
      y = n, 
      group = 1,
      text = paste0(
        "Año: ", anio,
        "<br>Cantidad de incendios: ", comma(n)
      )
    )
  ) +
  geom_line(color = "red", linewidth = 1) + # línea principal
  geom_point(color = "red", size = 2) +     # puntos sobre la línea
  geom_smooth(method = "lm", se = FALSE,    # línea de tendencia
              linetype = "dashed", linewidth = 0.8,
              color = "gray30") +
  labs(
    x = "Año",
    y = "Cantidad de incendios"
  ) +
  theme_minimal(base_size = 12) +
  theme(
    panel.grid.major.x = element_blank(),
    axis.text.x = element_text(angle = 45, hjust = 1)
  )

# Convertir a gráfico interactivo plotly
g_interactivo <- ggplotly(g, tooltip = "text") |> config(locale = 'es')

# Mostrar el gráfico
g_interactivo
```

## Área quemada

```{r}
#| label: grafico-area-quemada-por-anio
#| warning: false
#| message: false
#| code-fold: true

# Gráfico ggplot2 de líneas + tendencia
g <-
  ggplot(
    incendios_por_anio,
    aes(
      x = anio,
      y = area_quemada_total,
      group = 1,
      text = paste0(
        "Año: ", anio,
        "<br>Área quemada (acres): ", comma(area_quemada_total), " acres"
      )
    )
  ) +
  geom_line(color = "red", linewidth = 1) + # línea principal
  geom_point(color = "red", size = 2) +     # puntos
  geom_smooth(method = "lm", se = FALSE,    # línea de tendencia
              linetype = "dashed", linewidth = 0.8,
              color = "gray30") +
  labs(
    x = "Año",
    y = "Área quemada (acres)"
  ) +
  scale_y_continuous(labels = comma) + # separador de miles en eje Y
  theme_minimal(base_size = 12) +
  theme(
    panel.grid.major.x = element_blank(),
    axis.text.x = element_text(angle = 45, hjust = 1)
  )

# Convertir a gráfico interactivo plotly
g_interactivo <- ggplotly(g, tooltip = "text") |> config(locale = 'es')

# Mostrar el gráfico
g_interactivo
```

## Temperatura promedio del centroide del incendio a la hora de emisión de la alarma

```{r}
#| label: grafico-temperatura-por-anio
#| warning: false
#| message: false
#| code-fold: true

# Gráfico ggplot2 de líneas + tendencia
g <-
  ggplot(
    incendios_por_anio,
    aes(
      x = anio,
      y = temperatura_2m_promedio_hora_fecha_alarma,
      group = 1,
      text = paste0(
        "Año: ", anio,
        "<br>Temperatura promedio: ",
        number(temperatura_2m_promedio_hora_fecha_alarma, accuracy = 0.1), " °C"
      )
    )
  ) +
  geom_line(color = "red", linewidth = 1) + # línea principal
  geom_point(color = "red", size = 2) +     # puntos
  geom_smooth(method = "lm", se = FALSE,    # tendencia lineal
              linetype = "dashed", linewidth = 0.8,
              color = "gray30") +
  labs(
    x = "Año",
    y = "Temperatura promedio (°C)"
  ) +
  scale_y_continuous(labels = number_format(accuracy = 0.1)) +
  theme_minimal(base_size = 12) +
  theme(
    panel.grid.major.x = element_blank(),
    axis.text.x = element_text(angle = 45, hjust = 1)
  )

# Convertir a gráfico interactivo plotly
g_interactivo <- ggplotly(g, tooltip = "text") |> config(locale = 'es')

# Mostrar gráfico interactivo
g_interactivo
```

# Análisis por mes

## Cantidad de incendios

```{r}
#| label: grafico-cantidad-incendios-por-anio-mes
#| code-fold: true
#| warning: false
#| message: false

# Sumar la cantidad de incendios por mes (todos los años)
incendios_mes_total <- 
  incendios_por_anio_mes |>
  group_by(mes) |>
  summarise(n = sum(n), .groups = "drop")

# Gráfico ggplot2 de barras (una por mes)
g <-
  ggplot(
    incendios_mes_total,
    aes(
      x    = mes,
      y    = n,
      text = sprintf("Mes: %s<br>Cantidad de incendios: %d", mes, n)
    )
  ) +
  geom_col(fill = "firebrick") +
  labs(
    x = "Mes",
    y = "Cantidad de incendios"
  ) +
  scale_y_continuous(expand = expansion(mult = c(0, 0.05))) +
  theme_minimal(base_size = 12) +
  theme(
    panel.grid.major.x = element_blank(),
    axis.text.x = element_text(angle = 45, hjust = 1)
  )

# Convertir a gráfico interactivo plotly
g_interactivo <- ggplotly(g, tooltip = "text")  |> config(locale = 'es')

# Mostrar el gráfico interactivo
g_interactivo
```

## Área quemada

```{r}
#| label: grafico-area-quemada-por-anio-mes
#| code-fold: true

# Sumar el área quemada por mes (todos los años)
incendios_area_total <- 
  incendios_por_anio_mes |>
  group_by(mes) |>
  summarise(area_quemada_total = sum(area_quemada_total), .groups = "drop")

# Gráfico ggplot2 de barras (una por mes)
g <-
  ggplot(
    incendios_area_total,
    aes(
      x = mes,
      y = area_quemada_total,
      text = sprintf(
        "Mes: %s<br>Área quemada: %s acres",
        mes,
        comma(area_quemada_total)
      )
    )
  ) +
  geom_col(fill = "firebrick") +
  labs(
    x = "Mes",
    y = "Área quemada (acres)"
  ) +
  scale_y_continuous(
    labels = comma,
    expand = expansion(mult = c(0, 0.05))
  ) +
  theme_minimal(base_size = 12) +
  theme(
    panel.grid.major.x = element_blank(),
    axis.text.x = element_text(angle = 45, hjust = 1)
  )

# Convertir a gráfico interactivo plotly
g_interactivo <- ggplotly(g, tooltip = "text") |> config(locale = "es")

# Mostrar gráfico interactivo
g_interactivo
```

## Temperatura promedio del centroide del incendio a la hora de emisión de la alarma

```{r}
#| label: grafico-temperatura-por-anio-mes
#| code-fold: true

# Calcular la temperatura promedio por mes (promedio de todos los años)
temperatura_mes_promedio <- 
  incendios_por_anio_mes |>
  group_by(mes) |>
  summarise(
    temperatura_2m_promedio_hora_fecha_alarma = mean(
      temperatura_2m_promedio_hora_fecha_alarma, 
      na.rm = TRUE
    ),
    .groups                                   = "drop"
  )

# Gráfico ggplot2 de barras (una por mes)
g <-
  ggplot(
    temperatura_mes_promedio,
    aes(
      x = mes,
      y = temperatura_2m_promedio_hora_fecha_alarma,
      text = sprintf(
        "Mes: %s<br>Temp. promedio: %.1f °C",
        mes, temperatura_2m_promedio_hora_fecha_alarma
      )
    )
  ) +
  geom_col(fill = "firebrick") +
  labs(
    x = "Mes",
    y = "Temperatura promedio (°C)"
  ) +
  scale_y_continuous(expand = expansion(mult = c(0, 0.05))) +
  theme_minimal(base_size = 12) +
  theme(
    panel.grid.major.x = element_blank(),
    axis.text.x = element_text(angle = 45, hjust = 1)
  )

# Convertir a gráfico interactivo plotly
g_interactivo <- ggplotly(g, tooltip = "text") |> config(locale = "es")

# Mostrar gráfico interactivo
g_interactivo
```

# Análisis por mes y año

## Cantidad de incendios

```{r}
#| label: grafico-cantidad-incendios-por-mes-anio
#| code-fold: true
#| fig-height: 8
#| fig-width: 8

# Heatmap
g <-
  ggplot(
    incendios_por_anio_mes,
    aes(
      x = mes,
      y = factor(anio),
      fill = n,
      text = paste0(
        "Año: ", anio,
        "<br>Mes: ", mes,
        "<br>Cantidad de incendios: ", n
      )
    )
  ) +
  geom_tile(color = "white") +
  scale_fill_viridis_c(name = "Incendios", option = "inferno", direction = -1) +
  labs(
    x = "Mes",
    y = "Año"
  ) +
  theme_minimal(base_size = 12) +
  theme(
    panel.grid = element_blank(),
    axis.text.x = element_text(angle = 45, hjust = 1)
  )

# Convertir a gráfico interactivo plotly
# g_interactivo <- 
#   ggplotly(g, tooltip = "text", height = 700) |> 
#   config(locale = 'es')

# Mostrar gráfico
g
```

## Área quemada

```{r}
#| label: grafico-area-quemada-por-mes-anio
#| code-fold: true
#| fig-height: 8
#| fig-width: 8

# Heatmap
g <-
  ggplot(
    incendios_por_anio_mes,
    aes(
      x = mes,
      y = factor(anio),
      fill = area_quemada_total,
      text = paste0(
        "Año: ", anio,
        "<br>Mes: ", mes,
        "<br>Área quemada: ", comma(area_quemada_total, accuracy = 1), " acres"
      )
    )
  ) +
  geom_tile(color = "white") +
  scale_fill_viridis_c(
    name       = "Área (acres)",
    option     = "inferno",
    direction  = -1,
    labels     = label_number(accuracy = 1, big.mark = ",")
  ) +
  labs(
    x = "Mes",
    y = "Año"
  ) +
  theme_minimal(base_size = 12) +
  theme(
    panel.grid = element_blank(),
    axis.text.x = element_text(angle = 45, hjust = 1)
  )

# Versión interactiva
# g_interactivo <- 
#   ggplotly(g, tooltip = "text", height = 700) |> 
#   config(locale = 'es')

# Mostrar el gráfico
g
```

## Temperatura promedio del centroide del incendio a la hora de emisión de la alarma

```{r}
#| label: grafico-temperatura-promedio-por-mes-anio
#| code-fold: true
#| fig-height: 8
#| fig-width: 8

# Heatmap
g <-
  ggplot(
    incendios_por_anio_mes,
    aes(
      x = mes,
      y = factor(anio),
      fill = temperatura_2m_promedio_hora_fecha_alarma,
      text = paste0(
        "Año: ", anio,
        "<br>Mes: ", mes,
        "<br>Temperatura promedio: ", comma(temperatura_2m_promedio_hora_fecha_alarma, accuracy = 0.1), " °C"
      )
    )
  ) +
  geom_tile(color = "white") +
  scale_fill_viridis_c(
    name       = "Temperatura (°C)",
    option     = "inferno",
    direction  = -1,
    labels     = label_number(accuracy = 1, big.mark = ",")
  ) +
  labs(
    x = "Mes",
    y = "Año"
  ) +
  theme_minimal(base_size = 12) +
  theme(
    panel.grid = element_blank(),
    axis.text.x = element_text(angle = 45, hjust = 1)
  )

# Versión interactiva
# g_interactivo <- 
#  ggplotly(g, tooltip = "text", height = 700) |> 
#  config(locale = 'es')

# Mostrar el gráfico
g
```

# Mapas de variables climáticas

## Temperatura promedio del aire a 2 m

```{r}
#| label: mapa-temperatura_2m-promedio
#| warning: false
#| message: false
#| code-fold: true
#| fig-height: 8
#| fig-width: 8

tmap_mode("plot")

tm_shape(temperature_2m) +
  tm_raster(
    col.scale  = escala_temperature,
    col.legend = tm_legend(title = "°C")
  ) +
  tm_facets(ncol = 3) +
  tm_layout(
    outer.margins = 0,
    inner.margins = 0,
    legend.outside = TRUE,
    frame = FALSE
  )
```

**Diferencia (2020–2024) – (1980–1984)**

```{r}
#| label: mapa-diferencia-temperatura_2m-1980_1984_vs_2020_2024
#| warning: false
#| message: false
#| code-fold: true
#| fig-height: 6
#| fig-width: 6

# --------------------------
# Diferencia de temperatura
# (2020–2024) – (1980–1984)
# --------------------------
temp_diff <- temperature_2m[["2020–2024"]] - temperature_2m[["1980–1984"]]

# Rango simétrico alrededor de 0 °C para la paleta divergente
rango <- max(abs(minmax(temp_diff)))   # mismo valor para |mín| y |máx|
escala_diff <- tm_scale_continuous(
  limits       = c(-rango, rango),
  values       = "-RdBu",   # azul = enfriamiento, rojo = calentamiento
  midpoint     = 0,
  values.range = c(0, 1)
)

tmap_mode("plot")

tm_shape(temp_diff) +
  tm_raster(
    col.scale  = escala_diff,
    col.legend = tm_legend(title = "Δ Temp (°C)")
  ) +
  tm_layout(
    outer.margins = 0,
    inner.margins = 0,
    legend.outside = TRUE,
    frame = FALSE
  )
```

## Temperatura promedio de la superficie de la Tierra

```{r}
#| label: mapa-temperatura_superficie-promedio
#| warning: false
#| message: false
#| code-fold: true
#| fig-height: 8
#| fig-width: 8

tmap_mode("plot")

tm_shape(skin_temperature) +
  tm_raster(
    col.scale  = escala_temperature,
    col.legend = tm_legend(title = "°C")
  ) +
  tm_facets(ncol = 3) +
  tm_layout(
    outer.margins = 0,
    inner.margins = 0,
    legend.outside = TRUE,
    frame = FALSE
  )
```

**Diferencia (2020–2024) – (1980–1984)**

```{r}
#| label: mapa-diferencia-temperatura_superficie-1980_1984_vs_2020_2024
#| warning: false
#| message: false
#| code-fold: true
#| fig-height: 6
#| fig-width: 6

# --------------------------
# Diferencia de temperatura
# de la superficie
# (2020–2024) – (1980–1984)
# --------------------------
skin_diff <- skin_temperature[["2020–2024"]] - skin_temperature[["1980–1984"]]

# Rango simétrico alrededor de 0 °C
rango_skin <- max(abs(minmax(skin_diff)))

escala_skin_diff <- tm_scale_continuous(
  limits       = c(-rango_skin, rango_skin),
  values       = "-RdBu",
  midpoint     = 0,
  values.range = c(0, 1)
)

tmap_mode("plot")

tm_shape(skin_diff) +
  tm_raster(
    col.scale  = escala_skin_diff,
    col.legend = tm_legend(title = "Δ Temp (°C)")
  ) +
  tm_layout(
    outer.margins = 0,
    inner.margins = 0,
    legend.outside = TRUE,
    frame = FALSE
  )
```

## Temperatura promedio del suelo (0 - 7 cm)

```{r}
#| label: mapa-temperatura_suelo-nivel_1-promedio
#| warning: false
#| message: false
#| code-fold: true
#| fig-height: 8
#| fig-width: 8

tmap_mode("plot")

tm_shape(soil_temperature_level_1) +
  tm_raster(
    col.scale  = escala_temperature,
    col.legend = tm_legend(title = "°C")
  ) +
  tm_facets(ncol = 3) +
  tm_layout(
    outer.margins = 0,
    inner.margins = 0,
    legend.outside = TRUE,
    frame = FALSE
  )
```

**Diferencia (2020–2024) – (1980–1984)**

```{r}
#| label: mapa-diferencia-temperatura_suelo_nivel1-1980_1984_vs_2020_2024
#| warning: false
#| message: false
#| code-fold: true
#| fig-height: 6
#| fig-width: 6

# --------------------------
# Diferencia de temperatura
# del suelo nivel 1
# (2020–2024) – (1980–1984)
# --------------------------
soil_diff <- soil_temperature_level_1[["2020–2024"]] - soil_temperature_level_1[["1980–1984"]]

# Rango simétrico alrededor de 0 °C
rango_soil <- max(abs(minmax(soil_diff)))

escala_soil_diff <- tm_scale_continuous(
  limits       = c(-rango_soil, rango_soil),
  values       = "-RdBu",
  midpoint     = 0,
  values.range = c(0, 1)
)

tmap_mode("plot")

tm_shape(soil_diff) +
  tm_raster(
    col.scale  = escala_soil_diff,
    col.legend = tm_legend(title = "Δ Temp (°C)")
  ) +
  tm_layout(
    outer.margins = 0,
    inner.margins = 0,
    legend.outside = TRUE,
    frame = FALSE
  )
```

## Precipitación total mensual promedio

```{r}
#| label: mapa-precipitacion_total_mensual-promedio
#| warning: false
#| message: false
#| code-fold: true
#| fig-height: 8
#| fig-width: 8

tmap_mode("plot")

tm_shape(total_precipitation) +
  tm_raster(
    col.scale  = escala_total_precipitation,
    col.legend = tm_legend(title = "mm")
  ) +
  tm_facets(ncol = 3) +
  tm_layout(
    outer.margins = 0,
    inner.margins = 0,
    legend.outside = TRUE,
    frame = FALSE
  )
```

**Diferencia (2020–2024) – (1980–1984)**

```{r}
#| label: mapa-diferencia-precipitacion_total_mensual-1980_1984_vs_2020_2024
#| warning: false
#| message: false
#| code-fold: true
#| fig-height: 6
#| fig-width: 6

# -------------------------------------------
# Diferencia de precipitación (mm / mes)
# (2020–2024) – (1980–1984)
# -------------------------------------------
precip_diff <- total_precipitation[["2020–2024"]] - total_precipitation[["1980–1984"]]

# Rango simétrico alrededor de 0 mm
rango_precip <- max(abs(minmax(precip_diff)))

escala_precip_diff <- tm_scale_continuous(
  limits       = c(-rango_precip, rango_precip),
  values       = "-BrBG",   # marrón = disminución, azul-verde = aumento
  midpoint     = 0,
  values.range = c(0, 1)
)

tmap_mode("plot")

tm_shape(precip_diff) +
  tm_raster(
    col.scale  = escala_precip_diff,
    col.legend = tm_legend(title = "Δ Precipitación (mm)")
  ) +
  tm_layout(
    outer.margins = 0,
    inner.margins = 0,
    legend.outside = TRUE,
    frame = FALSE
  )
```

## Componente u (este-oeste) del viento a 10 m

```{r}
#| label: mapa-componente-u-viento
#| warning: false
#| message: false
#| code-fold: true
#| fig-height: 8
#| fig-width: 8

tmap_mode("plot")

tm_shape(u_component_of_wind_10m) +
  tm_raster(
    palette = paleta_u_component_of_wind_10m,
    style   = "cont",
    title   = "m s⁻¹"
  ) +
  tm_facets(ncol = 3) +
  tm_layout(
    outer.margins = 0,
    inner.margins = 0,
    legend.outside = TRUE,
    frame = FALSE
  )
```

**Diferencia (2020–2024) – (1980–1984)**

```{r}
#| label: mapa-diferencia-componente_u-viento-1980_1984_vs_2020_2024
#| warning: false
#| message: false
#| code-fold: true
#| fig-height: 6
#| fig-width: 6

# -------------------------------------------
# Diferencia del componente u (m s⁻¹)
# (2020–2024) – (1980–1984)
# -------------------------------------------
u_diff <- u_component_of_wind_10m[["2020–2024"]] - u_component_of_wind_10m[["1980–1984"]]

# Rango simétrico alrededor de 0 m s⁻¹
rango_u <- max(abs(minmax(u_diff)))

escala_u_diff <- tm_scale_continuous(
  limits       = c(-rango_u, rango_u),
  values       = "-PuOr",   # naranja = disminución oeste-→este, púrpura = aumento oeste-→este
  midpoint     = 0,
  values.range = c(0, 1)
)

tmap_mode("plot")

tm_shape(u_diff) +
  tm_raster(
    col.scale  = escala_u_diff,
    col.legend = tm_legend(title = "Δ u (m s⁻¹)")
  ) +
  tm_layout(
    outer.margins = 0,
    inner.margins = 0,
    legend.outside = TRUE,
    frame = FALSE
  )
```

## Componente v (norte-sur) del viento a 10 m

```{r}
#| label: mapa-componente-v-viento
#| warning: false
#| message: false
#| code-fold: true
#| fig-height: 8
#| fig-width: 8

tmap_mode("plot")

tm_shape(v_component_of_wind_10m) +
  tm_raster(
    palette = paleta_v_component_of_wind_10m,
    style   = "cont",
    title   = "m s⁻¹"
  ) +
  tm_facets(ncol = 3) +
  tm_layout(
    outer.margins = 0,
    inner.margins = 0,
    legend.outside = TRUE,
    frame = FALSE
  )
```

**Diferencia (2020–2024) – (1980–1984)**

```{r}
#| label: mapa-diferencia-componente_v-viento-1980_1984_vs_2020_2024
#| warning: false
#| message: false
#| code-fold: true
#| fig-height: 6
#| fig-width: 6

# -------------------------------------------
# Diferencia del componente v (m s⁻¹)
# (2020–2024) – (1980–1984)
# -------------------------------------------
v_diff <- v_component_of_wind_10m[["2020–2024"]] - v_component_of_wind_10m[["1980–1984"]]

# Rango simétrico alrededor de 0 m s⁻¹
rango_v <- max(abs(minmax(v_diff)))

escala_v_diff <- tm_scale_continuous(
  limits       = c(-rango_v, rango_v),
  values       = "-PuOr",   # naranja = disminución sur-→norte, púrpura = aumento sur-→norte
  midpoint     = 0,
  values.range = c(0, 1)
)

tmap_mode("plot")

tm_shape(v_diff) +
  tm_raster(
    col.scale  = escala_v_diff,
    col.legend = tm_legend(title = "Δ v (m s⁻¹)")
  ) +
  tm_layout(
    outer.margins = 0,
    inner.margins = 0,
    legend.outside = TRUE,
    frame = FALSE
  )
```

## Velocidad del viento a 10 m

```{r}
#| label: mapa-velocidad-viento
#| warning: false
#| message: false
#| code-fold: true
#| fig-height: 8
#| fig-width: 8

tmap_mode("plot")

tm_shape(wind_speed_10m) +
  tm_raster(
    palette = paleta_wind_speed_10m,
    style   = "cont",
    title   = "kmh"
  ) +
  tm_facets(ncol = 3) +
  tm_layout(
    outer.margins = 0,
    inner.margins = 0,
    legend.outside = TRUE,
    frame = FALSE
  )
```

**Diferencia (2020–2024) – (1980–1984)**

```{r}
#| label: mapa-diferencia-velocidad_viento-1980_1984_vs_2020_2024
#| warning: false
#| message: false
#| code-fold: true
#| fig-height: 6
#| fig-width: 6

# -------------------------------------------
# Diferencia de velocidad del viento (km / h)
# (2020–2024) – (1980–1984)
# -------------------------------------------
speed_diff <- wind_speed_10m[["wind_speed_kmh_2020-2024"]] - wind_speed_10m[["wind_speed_kmh_1980-1984"]]

# Rango simétrico alrededor de 0
rango_speed <- max(abs(minmax(speed_diff)))

escala_speed_diff <- tm_scale_continuous(
  limits       = c(-rango_speed, rango_speed),
  values       = "-BrBG",   # marrón = disminución, azul-verde = aumento
  midpoint     = 0,
  values.range = c(0, 1)
)

tmap_mode("plot")

tm_shape(speed_diff) +
  tm_raster(
    col.scale  = escala_speed_diff,
    col.legend = tm_legend(title = "Δ Velocidad del viento (km/h)")
  ) +
  tm_layout(
    outer.margins = 0,
    inner.margins = 0,
    legend.outside = TRUE,
    frame = FALSE
  )
```

## Dirección del viento (desde) a 10 m

```{r}
#| label: mapa-direccion-viento-desde
#| warning: false
#| message: false
#| code-fold: true
#| fig-height: 8
#| fig-width: 8

tmap_mode("plot")

tm_shape(wind_dir_from_10m) +
  tm_raster(
    palette = paleta_wind_dir_from_10m,
    style   = "cont",
    title   = "grados"
  ) +
  tm_facets(ncol = 3) +
  tm_layout(
    outer.margins = 0,
    inner.margins = 0,
    legend.outside = TRUE,
    frame = FALSE
  )
```

**Diferencia (2020–2024) – (1980–1984)**

```{r}
#| label: mapa-diferencia-direccion_viento_desde-1980_1984_vs_2020_2024
#| warning: false
#| message: false
#| code-fold: true
#| fig-height: 6
#| fig-width: 6

# -------------------------------------------
# Diferencia de dirección del viento (grados)
# (2020–2024) – (1980–1984)
# -------------------------------------------
dir_wind_from_diff <- wind_dir_from_10m[["wind_dir_from_2020-2024"]] - wind_dir_from_10m[["wind_dir_from_1980-1984"]]

# Rango simétrico alrededor de 0
rango_dir_wind_from <- max(abs(minmax(dir_wind_from_diff)))

escala_dir_wind_from_diff <- tm_scale_continuous(
  limits       = c(-rango_speed, rango_speed),
  values       = "-BrBG",   # marrón = disminución, azul-verde = aumento
  midpoint     = 0,
  values.range = c(0, 1)
)

tmap_mode("plot")

tm_shape(dir_wind_from_diff) +
  tm_raster(
    col.scale  = escala_dir_wind_from_diff,
    col.legend = tm_legend(title = "Δ Dirección del viento (desde) (grados)")
  ) +
  tm_layout(
    outer.margins = 0,
    inner.margins = 0,
    legend.outside = TRUE,
    frame = FALSE
  )
```

## Dirección del viento (hacia) a 10 m

```{r}
#| label: mapa-direccion-viento-hacia
#| warning: false
#| message: false
#| code-fold: true
#| fig-height: 8
#| fig-width: 8

tmap_mode("plot")

tm_shape(wind_dir_to_10m) +
  tm_raster(
    palette = paleta_wind_dir_to_10m,
    style   = "cont",
    title   = "grados"
  ) +
  tm_facets(ncol = 3) +
  tm_layout(
    outer.margins = 0,
    inner.margins = 0,
    legend.outside = TRUE,
    frame = FALSE
  )
```

**Diferencia (2020–2024) – (1980–1984)**

```{r}
#| label: mapa-diferencia-direccion_viento_hacia-1980_1984_vs_2020_2024
#| warning: false
#| message: false
#| code-fold: true
#| fig-height: 6
#| fig-width: 6

# -------------------------------------------
# Diferencia de dirección del viento (grados)
# (2020–2024) – (1980–1984)
# -------------------------------------------
dir_wind_to_diff <- wind_dir_to_10m[["wind_dir_to_2020-2024"]] - wind_dir_to_10m[["wind_dir_to_1980-1984"]]

# Rango simétrico alrededor de 0
rango_dir_wind_to <- max(abs(minmax(dir_wind_to_diff)))

escala_dir_wind_to_diff <- tm_scale_continuous(
  limits       = c(-rango_speed, rango_speed),
  values       = "-BrBG",   # marrón = disminución, azul-verde = aumento
  midpoint     = 0,
  values.range = c(0, 1)
)

tmap_mode("plot")

tm_shape(dir_wind_to_diff) +
  tm_raster(
    col.scale  = escala_dir_wind_to_diff,
    col.legend = tm_legend(title = "Δ Dirección del viento (hacia) (grados)")
  ) +
  tm_layout(
    outer.margins = 0,
    inner.margins = 0,
    legend.outside = TRUE,
    frame = FALSE
  )
```

## Índice de área foliar (LAI) – vegetación alta

```{r}
#| label: mapa-lai-vegetacion-alta
#| warning: false
#| message: false
#| code-fold: true
#| fig-height: 8
#| fig-width: 8

tmap_mode("plot")

tm_shape(lai_high_vegetation) +
  tm_raster(
    palette = paleta_lai_high_vegetation,
    style   = "cont",
    title   = "LAI (m²/m²)"
  ) +
  tm_facets(ncol = 3) +
  tm_layout(
    outer.margins = 0,
    inner.margins = 0,
    legend.outside = TRUE,
    frame = FALSE
  )
```

**Diferencia (2020–2024) – (1980–1984)**

```{r}
#| label: mapa-diferencia-lai_vegetacion_alta-1980_1984_vs_2020_2024
#| warning: false
#| message: false
#| code-fold: true
#| fig-height: 6
#| fig-width: 6

lai_high_diff <- lai_high_vegetation[["2020–2024"]] -
                 lai_high_vegetation[["1980–1984"]]

val_range      <- terra::global(lai_high_diff, fun = "range", na.rm = TRUE)[1, ]
rango_lai_high <- max(abs(val_range))
if (rango_lai_high < 1e-6) rango_lai_high <- 1e-6   # evita rango 0

escala_lai_high_diff <- tm_scale_continuous(
  limits       = c(-rango_lai_high, rango_lai_high),
  values       = "-RdYlGn",
  midpoint     = 0,
  values.range = c(0, 1)
)

tmap_mode("plot")

tm_shape(lai_high_diff) +
  tm_raster(
    col.scale  = escala_lai_high_diff,
    col.legend = tm_legend(title = "Δ LAI (m²/m²)")
  ) +
  tm_layout(
    outer.margins = 0,
    inner.margins = 0,
    legend.outside = TRUE,
    frame = FALSE
  )
```

## Índice de área foliar (LAI) – vegetación baja

```{r}
#| label: mapa-lai-vegetacion-baja
#| warning: false
#| message: false
#| code-fold: true
#| fig-height: 8
#| fig-width: 8

tmap_mode("plot")

tm_shape(lai_low_vegetation) +
  tm_raster(
    palette      = paleta_lai_low_vegetation,
    style        = "cont",
    # values.range = c(0, 3),
    title        = "LAI (m²/m²)"
  ) +
  tm_facets(ncol = 3) +
  tm_layout(
    outer.margins = 0,
    inner.margins = 0,
    legend.outside = TRUE,
    frame = FALSE
  )
```

**Diferencia (2020–2024) – (1980–1984)**

```{r}
#| label: mapa-diferencia-lai_vegetacion_baja-1980_1984_vs_2020_2024
#| warning: false
#| message: false
#| code-fold: true
#| fig-height: 6
#| fig-width: 6

# --------------------------------------------------------
# Diferencia de LAI – vegetación baja (m² m⁻²)
# (2020–2024) – (1980–1984)
# --------------------------------------------------------
lai_low_diff <- lai_low_vegetation[["2020–2024"]] -
                lai_low_vegetation[["1980–1984"]]

# Obtener el rango real de valores
val_range     <- terra::global(lai_low_diff, fun = "range", na.rm = TRUE)[1, ]
rango_lai_low <- max(abs(val_range))

# Evitar rango 0 (o muy pequeño) que provoca 'breaks' duplicados
if (rango_lai_low < 1e-6) rango_lai_low <- 1e-6

escala_lai_low_diff <- tm_scale_continuous(
  limits       = c(-rango_lai_low, rango_lai_low),
  values       = "-RdYlGn",   # rojo = pérdida, verde = aumento
  midpoint     = 0,
  values.range = c(0, 1)
)

tmap_mode("plot")

tm_shape(lai_low_diff) +
  tm_raster(
    col.scale  = escala_lai_low_diff,
    col.legend = tm_legend(title = "Δ LAI (m²/m²)")
  ) +
  tm_layout(
    outer.margins = 0,
    inner.margins = 0,
    legend.outside = TRUE,
    frame = FALSE
  )
```

